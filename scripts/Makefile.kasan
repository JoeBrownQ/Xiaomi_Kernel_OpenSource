# SPDX-License-Identifier: GPL-2.0
ifdef CONFIG_KASAN
ifdef CONFIG_KASAN_INLINE
	call_threshold := 10000
else
	call_threshold := 0
endif

KASAN_SHADOW_OFFSET ?= $(CONFIG_KASAN_SHADOW_OFFSET)

CFLAGS_KASAN_MINIMAL := -fsanitize=kernel-address

cc-param = $(call cc-option, -mllvm -$(1), $(call cc-option, --param $(1)))

ifeq ($(call cc-option, $(CFLAGS_KASAN_MINIMAL) -Werror),)
   ifneq ($(CONFIG_COMPILE_TEST),y)
        $(warning Cannot use CONFIG_KASAN: \
            -fsanitize=kernel-address is not supported by compiler)
   endif
else
   # -fasan-shadow-offset fails without -fsanitize
   CFLAGS_KASAN_SHADOW := $(call cc-option, -fsanitize=kernel-address \
			-fasan-shadow-offset=$(KASAN_SHADOW_OFFSET), \
			$(call cc-option, -fsanitize=kernel-address \
			-mllvm -asan-mapping-offset=$(KASAN_SHADOW_OFFSET)))

   ifeq ($(strip $(CFLAGS_KASAN_SHADOW)),)
      CFLAGS_KASAN := $(CFLAGS_KASAN_MINIMAL)
   else
      # Now add all the compiler specific options that are valid standalone
      CFLAGS_KASAN := $(CFLAGS_KASAN_SHADOW) \
	$(call cc-param,asan-globals=1) \
	$(call cc-param,asan-instrumentation-with-call-threshold=$(call_threshold)) \
<<<<<<< HEAD
	$(call cc-param,asan-stack=1) \
	$(call cc-param,asan-use-after-scope=1) \
=======
	$(call cc-param,asan-stack=$(CONFIG_KASAN_STACK)) \
>>>>>>> e601e14af (Kernel: Xiaomi kernel changes for Redmi Note 9 Pro Android Q)
	$(call cc-param,asan-instrument-allocas=1)
   endif

endif

<<<<<<< HEAD
ifdef CONFIG_KASAN_EXTRA
CFLAGS_KASAN += $(call cc-option, -fsanitize-address-use-after-scope)
endif

=======
>>>>>>> e601e14af (Kernel: Xiaomi kernel changes for Redmi Note 9 Pro Android Q)
CFLAGS_KASAN_NOSANITIZE := -fno-builtin

endif
